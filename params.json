{"name":"Guard-rails","tagline":"Guard-rails is watching on your railses!","body":"# Guard-rails is watching on your railses!\r\n\r\n[![Gem Version](https://badge.fury.io/rb/guard-rails.png)](http://badge.fury.io/rb/guard-rails)\r\n[![Build Status](https://travis-ci.org/ranmocy/guard-rails.png)](https://travis-ci.org/ranmocy/guard-rails)\r\n[![Dependency Status](https://gemnasium.com/ranmocy/guard-rails.png)](https://gemnasium.com/ranmocy/guard-rails)\r\n[![Code Climate](https://codeclimate.com/badge.png)](https://codeclimate.com/github/ranmocy/guard-rails)\r\n\r\n## Want to restart your Rails development server whilst you work? Now you can!\r\n\r\n    guard 'rails', :port => 5000 do\r\n      watch('Gemfile.lock')\r\n      watch(%r{^(config|lib)/.*})\r\n    end\r\n\r\n## Lots of fun options!\r\n\r\n* `:port` is the port number to run on (default `3000`)\r\n* `:environment` is the environment to use (default `development`)\r\n* `:start_on_start` will start the server when starting Guard (default `true`)\r\n* `:force_run` kills any process that's holding open the listen port before attempting to (re)start Rails (default `false`).\r\n* `:daemon` runs the server as a daemon, without any output to the terminal that ran `guard` (default `false`).\r\n* `:debugger` runs the server with the debugger enabled (default `false`). Required ruby-debug gem.\r\n* `:timeout` waits this number of seconds when restarting the Rails server before reporting there's a problem (default `20`).\r\n* `:server` lets you specify the webserver engine to use (try `:server => :thin`).\r\n* `:pid_file` specify your pid_file, so that maybe you can run multiple instances with same rails_env (default `tmp/pids/[RAILS_ENV].pid`).\r\n* `:zeus` support [zeus](https://github.com/burke/zeus) to boost rails init speed (default `false`).\r\n\r\n# Contribute\r\nFeel free to fork'n'fix for any willing.\r\n","google":"UA-20961770-6","note":"Don't delete this file! It's used internally to help with page regeneration."}